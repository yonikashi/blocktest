# Telegraf configuration for stellar core:
# this configuration does one thing: it reports the /info metrics from the core
# to the Kin Ecosystem metric collection endpoint, every 10 seconds

# Global tags can be specified here in key="value" format.
[tags]
  node_name = "$NODE_NAME" # take from env
  app_name = "stellar-core"

# Configuration for telegraf agent
[agent]
  # Default data collection interval for all inputs
  interval = "10s"
  # Rounds collection interval to 'interval'
  # ie, if interval="10s" then always collect on :00, :10, :20, etc.
  round_interval = true

  # Telegraf will cache metric_buffer_limit metrics for each output, and will
  # flush this buffer on a successful write.
  metric_buffer_limit = 10000

  # Collection jitter is used to jitter the collection by a random amount.
  # Each plugin will sleep for a random time within jitter before collecting.
  # This can be used to avoid many plugins querying things like sysfs at the
  # same time, which can have a measurable effect on the system.
  collection_jitter = "0s"

  # Default data flushing interval for all outputs. You should not set this below
  # interval. Maximum flush_interval will be flush_interval + flush_jitter
  flush_interval = "10s"
  # Jitter the flush interval by a random amount. This is primarily to avoid
  # large write spikes for users running a large number of telegraf instances.
  # ie, a jitter of 5s and interval 10s means flushes will happen every 10-15s
  flush_jitter = "0s"

  # Run telegraf in debug mode
  debug = false
  # Run telegraf in quiet mode
  quiet = false
  # Override default hostname, if empty use os.Hostname()
  hostname = ""


###############################################################################
#                                  OUTPUTS                                    #
###############################################################################

[[outputs.influxdb]]
  urls = ["http://metrics.kininfrastructure.com:8086"]
  skip_database_creation = true

  ## Timeout for HTTP messages.
  timeout = "5s"


###############################################################################
#                                  INPUTS                                     #
###############################################################################

[[inputs.system]]

# parse json from http
[[inputs.http]]
  ## One or more URLs from which to read formatted metrics
  urls = [
    "http://stellar-core:11626/info"
  ]

  ## HTTP method
  # method = "GET"

  name_prefix = "stellar_core_"

  data_format = "json"

  ## Query is a GJSON path that specifies a specific chunk of JSON to be
  ## parsed, if not specified the whole document will be parsed.
  ##
  ## GJSON query paths are described here:
  ##   https://github.com/tidwall/gjson#path-syntax
  json_query = "info.ledger"

[[inputs.exec]]
  ## Commands array
  commands = [
    "/tmp/get_core_state.sh",
  ]

  name_prefix = "stellar_core_"

  ## Timeout for each command to complete.
  timeout = "5s"

  ## measurement name suffix (for separating different commands)
  #name_suffix = "_mycollector"

  ## Data format to consume.
  ## Each data format has its own unique set of configuration options, read
  ## more about them here:
  ## https://github.com/influxdata/telegraf/blob/master/docs/DATA_FORMATS_INPUT.md
  data_format = "influx"


# vim: ft=toml
